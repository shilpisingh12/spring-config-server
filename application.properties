server.port =8081
spring.application.name=mdh

spring.datasource.driverClassName=org.postgresql.Driver

spring.datasource.url= jdbc:postgresql://50.78.150.245:5432/TESTDB
#spring.datasource.url= jdbc:postgresql://192.168.101.42:5432/TESTDB
spring.datasource.username=postgres
spring.datasource.password=prince@#$
#spring.datasource.password=postgres!@#


#MDH DB 
#spring.datasource.url= jdbc:postgresql://54.175.45.175:5432/mdh
#spring.datasource.username=postgres
#spring.datasource.password=RtrP@JMJ

#For connecting to neo4j browser
spring.datasource.neo4j.url= bolt://demo.mareana.com:4587
spring.datasource.neo4j.username=neo4j
spring.datasource.neo4j.password=Mzreana@190$


spring.jsonpath=/home/mdh/mdhjavamicro/

#Neo4j DB in 54 machine
#spring.datasource.neo4j.db.url= jdbc:postgresql://54.175.45.175:5432/elims
#spring.datasource.neo4j.db.username=postgres
#spring.datasource.neo4j.db.password=RtrP@JMJ

#Cassandra DB 72 machine
#spring.data.cassandra.keyspace-name=MasterDataDB
#spring.data.cassandra.keyspace-name=masterdatadb
#spring.data.cassandra.contact-points=192.168.101.72
#spring.data.cassandra.contact-points=192.168.1.46
#spring.data.cassandra.port=9042
#spring.data.cassandra.schema-action=create-if-not-exists
#spring.data.cassandra.username=cassandra
#spring.data.cassandra.password=cassandra

spring.cloud.config.server.git.uri=ssh://localhost/config-repo
spring.cloud.config.server.git.clone-on-start=true
	
eureka.client.enabled=false

spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true

#cors.allowedOrigins=http://localhost:3030

#hikari configuration
#maximum number of milliseconds that a client will wait for a connection
spring.datasource.hikari.connection-timeout = 20000
#minimum number of idle connections maintained by HikariCP in a connection pool
spring.datasource.hikari.minimum-idle=3
#maximum pool size
spring.datasource.hikari.maximum-pool-size= 10
#maximum amount of time in milliseconds that a connection is allowed to sit idle in connection pool
spring.datasource.hikari.idle-timeout=60000
# maximum lifetime in milliseconds of a connection in the pool after it is closed.
spring.datasource.hikari.max-lifetime= 1000


